{"name":"Geocoding lite","tagline":"","body":"Geocoding Lite\r\n==============\r\nLookup addresses, zip codes, cities and geographical coordinates.\r\n\r\n[![Build Status](https://travis-ci.org/mancmelou/geocoding_lite.png?branch=master)](https://travis-ci.org/mancmelou/geocoding_lite) [![Gem Version](https://badge.fury.io/rb/geocoding_lite.png)](http://badge.fury.io/rb/geocoding_lite)\r\n\r\nTable of contents\r\n-----------------\r\n1. [What is geocoding?](https://github.com/mancmelou/geocoding_lite#what-is-geocoding)\r\n2. [Installation](https://github.com/mancmelou/geocoding_lite#installation)\r\n3. [Geocoding in action](https://github.com/mancmelou/geocoding_lite#geocoding-in-action)\r\n4. [Reverse geocoding](https://github.com/mancmelou/geocoding_lite#reverse-geocoding)\r\n5. [Important things to know](https://github.com/mancmelou/geocoding_lite#important-things-to-know)\r\n6. [Contributing](https://github.com/mancmelou/geocoding_lite#contributing)\r\n7. [Author](https://github.com/mancmelou/geocoding_lite#author)\r\n\r\nWhat is geocoding?\r\n------------------\r\nGeocoding is the process of finding associated geographic coordinates (often expressed as latitude and longitude) \r\nfrom other geographic data, such as street addresses, or ZIP codes (postal codes). \r\nWith geographic coordinates the features can be mapped and entered into Geographic Information Systems, \r\nor the coordinates can be embedded into media such as digital photographs via geotagging.\r\n\r\nhttp://en.wikipedia.org/wiki/Geocoding\r\n\r\n\r\nInstallation\r\n------------\r\n\r\n    gem install geocoding_lite\r\n   \r\nGeocoding in action\r\n-------------------\r\nIt's super simple! Follow the example: \r\n\r\n```ruby\r\nrequire 'geocoding_lite'\r\n\r\nresults = '12783 Pico Blvd, Santa Monica'.geocoding_lookup\r\n\r\nputs results\r\n```\r\n\r\nWill output this\r\n```ruby\r\n[\r\n  {\r\n    :address => \"Pico Boulevard, Santa Monica, CA, USA\", \r\n    :lat     => 34.0176723, \r\n    :lng     => -118.4727648, \r\n    :types   => [\"route\"]\r\n  }, {\r\n    :address => \"West Pico Boulevard, CA, USA\", \r\n    :lat     => 34.0373139, \r\n    :lng     => -118.4343903, \r\n    :types   => [\"route\"]\r\n  }, {\r\n    :address => \"Santa Monica Boulevard, Santa Monica, CA, USA\", \r\n    :lat     => 34.023733, \r\n    :lng     => -118.485698, \r\n    :types   => [\"route\"]\r\n  }\r\n]\r\n```\r\n\r\nReverse geocoding\r\n-----------------\r\nYou can also do reverse lookups. Hooray! For instance, if you're extracting gps coordinates info \r\nfrom your smartphone photo library and you want to see what is the closest address to the \r\nlocation where the photo is taken.\r\n\r\nSee the following example: \r\n\r\n```ruby \r\nrequire 'geocoding_lite'\r\n\r\n# Coordinates of Brookly NY.\r\n# Note that when doing reverse geocoding you need \r\n# to put your coordinates in an array. \r\n# The size of array is 2 elements.\r\n#   coordinates[0] for lattitude\r\n#   coordinates[1] for longitude\r\ncoordinates = [40.714224, -73.961452]\r\n\r\nputs coordinates.geocoding_lookup.first\r\n```\r\n\r\nShould return this: \r\n```ruby\r\n{\r\n  :address => \"287 Bedford Avenue, Brooklyn, NY 11211, USA\", \r\n  :lat     => 40.7140334, \r\n  :lng     => -73.9614979, \r\n  :types   => [\"street_address\"]\r\n}\r\n```\r\n\r\nImportant things to know\r\n------------------------\r\nGeocoding Lite is based on Google's geocoding API and therefore it's a subject to certain limitations.\r\nOne of the limitations is that using this library, a user can make up to 2500 requests a day so, please, use \r\nit responsibly. For more info please check the link below.\r\n\r\nhttps://developers.google.com/maps/documentation/geocoding/#Limits\r\n\r\nAlso, if you are looking for more powerful geocoding library I recommend you trying geocoder.\r\n\r\nhttp://www.rubygeocoder.com/\r\n\r\nContributing\r\n------------\r\nAny help on this project is very welcome. Please feel free to fork, modify and \r\nmake pull requests. Also make sure you check the TODO file when the file is present in the repository. \r\n\r\nAuthor\r\n------\r\nGeocoding Lite was written by Vladimir Ivic (vladimir.ivic at icloud.com) and is\r\nreleased under the MIT license.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}